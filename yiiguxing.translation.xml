<application>
  <component name="AppStorage">
    <histories>
      <item value="select Count" />
      <item value="spatial" />
      <item value="spat" />
      <item value="耗时" />
      <item value="time consuming" />
      <item value="consuming" />
      <item value="time consumering" />
      <item value="Time consumering" />
      <item value="batch" />
      <item value="stub" />
      <item value="Objenesis" />
      <item value="ation" />
      <item value="serialize" />
      <item value="反序列化" />
      <item value="Serialization" />
      <item value="序列化" />
      <item value="Serializ" />
      <item value="protocol" />
      <item value="Length Field Based Frame Decoder" />
      <item value="out Trade No" />
      <item value="Documentation Type" />
      <item value="Request Handler Selectors" />
      <item value="SWAGGER_2" />
      <item value="prepare Environment" />
      <item value="main Application Class" />
      <item value="Annotation Config Reactive Web Server Application Context" />
      <item value="required" />
      <item value="annotated" />
      <item value="Declares whether the annotated dependency is required. * &lt;p&gt;Defaults to {@code true}." />
      <item value="and" />
      <item value="Ordered" />
      <item value="&lt;p&gt;Although {@code @Autowired} can technically be declared on individual method * or constructor parameters since Spring Framework 5.0, most parts of the * framework ignore such declarations. The only part of the core Spring Framework * that actively supports autowired parameters is the JUnit Jupiter support in * the {@code spring-test} module (see the" />
      <item value="the" />
      <item value="details" />
      <item value="arguments" />
      <item value="applicable" />
      <item value="&lt;h3&gt;Multiple Arguments and 'required' Semantics&lt;/h3&gt; * &lt;p&gt;In the case of a multi-arg constructor or method, the {@link #required} attribute * is applicable to all arguments. Individual parameters may be declared as Java-8 style * {@link java.util.Optional} or, as of Spring Framework 5.0, also as {@code @Nullable} * or a not-null parameter type in Kotlin, overriding the base 'required' semantics. *" />
      <item value="public" />
      <item value="constructor" />
      <item value="blue" />
      <item value="argument type mismatch" />
      <item value="set Consume Amount" />
      <item value="task has already been invoked" />
      <item value="trace Entry" />
      <item value="tasks Cost" />
      <item value="total Cost" />
      <item value="executing Index" />
      <item value="executed Index" />
      <item value="noinspection unchecked, type check is ok" />
      <item value="buttom" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="462" />
        <entry key="ENGLISH" value="463" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="ARABIC" value="1" />
        <entry key="ESTONIAN" value="2" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="1" />
        <entry key="GUJARATI" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="KANNADA" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LATVIAN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="SESOTHO" value="4" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="false" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>