<application>
  <component name="AppStorage">
    <histories>
      <item value="JS Secret" />
      <item value="force Delete" />
      <item value="Save filename same as source filename" />
      <item value="for Each Remaining" />
      <item value="Note that Sun's javac compiler often generates dead stores for final local variables. Because FindBugs is a bytecode-based tool, there is no easy way to eliminate these" />
      <item value="This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. Often, this indicates an error, because the value computed is never used." />
      <item value="base Bean" />
      <item value="耗时" />
      <item value="elapsed" />
      <item value="Reports any attempts to reflectively check for the presence of an annotation which is not defined as being retained at runtime. Using Class.isAnnotationPresent() to test for an annotation which has source retention or class-file retention (the default) will always result in a negative result, but is easy to do inadvertently." />
      <item value="release" />
      <item value="Lua Distribute Lock" />
      <item value="currency" />
      <item value="message" />
      <item value="Ensures that the entity content is fully consumed and the content stream, if exists, * is closed" />
      <item value="Add URL patterns to which the registered interceptor should apply to" />
      <item value="exchange 2007 Compatibility Mode" />
      <item value="The remote server returned an error: (401)Unauthorized" />
      <item value="You must use at least one, but no more than one http method annotation on" />
      <item value="failure" />
      <item value="失败" />
      <item value="待发送" />
      <item value="Overriding bean definition for bean 'stringRedisTemplate' with a different definition" />
      <item value="Lifecycle method annotation requires a no-arg method" />
      <item value="union And Store" />
      <item value="message Job Scheduler" />
      <item value="Lite Job Configuration" />
      <item value="耗时1 秒" />
      <item value="heartbeat" />
      <item value="DEFAULT COUNT" />
      <item value="message Service" />
      <item value="retries" />
      <item value="resteasy" />
      <item value="transform" />
      <item value="转换" />
      <item value="Duplicate spring bean id CMDS" />
      <item value="Checks types of parameters annotated @PathParam, @QueryParam, etc. The type of the annotated parameter, field or property must either: Be a primitive type. Have a constructor that accepts a single String argument. Have a static method named valueOf or fromString that accepts a single String argument (see, for example, Integer.valueOf(String)). Have a registered implementation of ParamConverterProvider JAX-RS extension SPI that returns a ParamConverter instance capable of a &quot;from string&quot; conversion for the type. Be List&lt;T&gt;, Set&lt;T&gt; or SortedSet&lt;T&gt;, where T satisfies 2, 3 or 4 above. The resulting collection is read-only." />
      <item value="persistence" />
      <item value="Consider defining a bean of type 'com.deppon.module.infrastructure.support.message.dao.MessageDao' in your configuration" />
      <item value="建议" />
      <item value="Client" />
      <item value="Pair" />
      <item value="Caller Runs Policy" />
      <item value="set Keep Alive Seconds" />
      <item value="fixed Rate" />
      <item value="Sensors Analysis" />
      <item value="Statistics" />
      <item value="approve" />
      <item value="initial Delay" />
      <item value="redis Utils" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="161" />
        <entry key="ENGLISH" value="162" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>